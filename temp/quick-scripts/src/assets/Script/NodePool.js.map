{"version":3,"sources":["assets/Script/NodePool.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;AAE5E,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAA;QAEI,WAAM,GAAc,IAAI,CAAC;QAGzB,SAAI,GAAW,CAAC,CAAC;QAET,UAAK,GAAgB,IAAI,CAAC;IAyBtC,CAAC;IAvBG,uBAAI,GAAJ;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;SAClC;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;YAChC,IAAI,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACxB;IACL,CAAC;IAED,8BAAW,GAAX;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;YACvB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;SAC3B;aAAM;YACH,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,6BAAU,GAAV,UAAW,IAAI;QACX,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IACxB,CAAC;IA7BD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;4CACK;IAGzB;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;0CACJ;IALR,QAAQ;QADpB,OAAO,CAAC,UAAU,CAAC;OACP,QAAQ,CAgCpB;IAAD,eAAC;CAhCD,AAgCC,IAAA;AAhCY,4BAAQ","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass(\"NodePool\")\nexport class NodePool {\n    @property(cc.Prefab)\n    prefab: cc.Prefab = null;\n\n    @property(cc.Integer)\n    size: number = 0;\n\n    private _pool: cc.NodePool = null;\n\n    init() {\n        if (!this._pool) {\n            this._pool = new cc.NodePool();\n        }\n        for (let i = 0; i < this.size; i++) {\n            let node = cc.instantiate(this.prefab);\n            this._pool.put(node);\n        }\n    }\n\n    requestPool() {\n        let node = null;\n        if (this._pool.size() > 0) {\n            node = this._pool.get();\n        } else {\n            node = cc.instantiate(this.prefab);\n        }\n        return node;\n    }\n\n    returnPool(node) {\n        this._pool.put(node)\n    }\n}\n"]}