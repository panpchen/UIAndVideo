{"version":3,"sources":["assets/Script/Game.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAElF,6CAAwC;AAElC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAkC,wBAAY;IAA9C;QAAA,qEA8BC;QA5BC,iBAAW,GAAc,IAAI,CAAC;QAE9B,iBAAW,GAAY,IAAI,CAAC;QAGpB,YAAM,GAAgB,IAAI,CAAC;QAI5B,4BAAsB,GAAa,EAAE,CAAC;;IAmB/C,CAAC;aA9BoB,IAAI;IAQvB,sBAAW,uBAAK;aAAhB;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;;;OAAA;IAGD,qBAAM,GAAN;QACE,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,yBAAU,GAAV,UAAW,QAAgB;QACzB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,qBAAW,CAAC,CAAC;YACzE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;SAC5C;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAED,oBAAK,GAAL;QACE,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;;IAvBa,aAAQ,GAAS,IAAI,CAAC;IAJpC;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;6CACU;IAE9B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;6CACU;IAJT,IAAI;QADxB,OAAO;OACa,IAAI,CA8BxB;IAAD,WAAC;CA9BD,AA8BC,CA9BiC,EAAE,CAAC,SAAS,GA8B7C;kBA9BoB,IAAI","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport LevelSelect from \"./LevelSelect\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Game extends cc.Component {\n  @property(cc.Prefab)\n  levelPrefab: cc.Prefab = null;\n  @property(cc.Node)\n  levelParent: cc.Node = null;\n\n  public static instance: Game = null;\n  private _level: LevelSelect = null;\n  public get level() {\n    return this._level;\n  }\n  public lastSelectPlayerIdList: number[] = [];\n\n  onLoad() {\n    Game.instance = this;\n    cc.director.on(\"gameStart\", this._startGame, this);\n  }\n\n  _startGame(playerId: number) {\n    if (!this._level) {\n      this._level = cc.instantiate(this.levelPrefab).getComponent(LevelSelect);\n      this._level.node.parent = this.levelParent;\n    }\n    this._level.init(playerId);\n  }\n\n  reset() {\n    this.lastSelectPlayerIdList = [];\n    this.level.reset();\n  }\n}\n"]}