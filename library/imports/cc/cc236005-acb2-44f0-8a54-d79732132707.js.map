{"version":3,"sources":["assets/Script/UI/AnswerUI.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAElF,mCAA8B;AAExB,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAM;IAA5C;QAAA,qEAwCC;QAtCC,SAAG,GAAY,IAAI,CAAC;QAEpB,UAAI,GAAY,IAAI,CAAC;QAErB,YAAM,GAAiB,IAAI,CAAC;;IAkC9B,CAAC;IAhCC,yBAAM,GAAN;QAAA,iBAIC;QAHC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE;YACzB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,uBAAI,GAAJ,UAAK,IAAW;QAAhB,iBAkBC;QAjBC,IAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAE1B,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC;QAE9B,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,SAAS,EAAE;gBACd,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;aACpB;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAC1B;SACF;aAAM;YACL,IAAI,CAAC,YAAY,CAAC;gBAChB,KAAI,CAAC,IAAI,EAAE,CAAC;YACd,CAAC,EAAE,CAAC,CAAC,CAAC;SACP;IACH,CAAC;IAED,+BAAY,GAAZ,UAAa,SAAkB;QAC7B,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,YAAY,CAAC;YAChB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;QAC/C,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IArCD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;yCACE;IAEpB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0CACG;IAErB;QADC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;4CACK;IANT,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAwC5B;IAAD,eAAC;CAxCD,AAwCC,CAxCqC,gBAAM,GAwC3C;kBAxCoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport BaseUI from \"./BaseUI\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class AnswerUI extends BaseUI {\n  @property(cc.Node)\n  win: cc.Node = null;\n  @property(cc.Node)\n  fail: cc.Node = null;\n  @property(cc.Animation)\n  winAni: cc.Animation = null;\n\n  onLoad() {\n    this.winAni.on(\"finished\", () => {\n      this._onNextLevel(true);\n    }, this);\n  }\n\n  init(args: any[]) {\n    const isCorrect = args[0];\n    const haveWrong = args[1];\n\n    this.win.active = isCorrect;\n    this.fail.active = !isCorrect;\n\n    if (isCorrect) {\n      if (!haveWrong) {\n        this.winAni.play();\n      } else {\n        this._onNextLevel(false);\n      }\n    } else {\n      this.scheduleOnce(() => {\n        this.hide();\n      }, 1);\n    }\n  }\n\n  _onNextLevel(isShowAni: boolean) {\n    this.hide();\n    this.scheduleOnce(() => {\n      cc.director.emit(\"gameNextLevel\", isShowAni);\n    }, 0.3);\n  }\n}\n"]}